	; [set_default_view] 解説画面を作成する独自マクロです。(詳細は「macro.ks」をご参照ください)
	[set_default_view]
	
	
	
; == 19_variable_1.ks ======================================
;
; 
;
; ★登場する主なタグ。
; [] … 

; ==========================================================
	
	
	
;-----------------------------------------------------------
*Start
;-----------------------------------------------------------
		
		; ●
		; ●変数を使えばフラグや好感度による分岐を実現できる。
		; ●
		
		[akn/def]
		ちょっとだけレベルアップしたテクニックとして「変数」を紹介しよう!![p][akn/hap]
		変数が使えれば、複雑な機能を実装できるようになるわ。[p]
		たとえば「好感度やフラグによるシナリオ分岐」をしたり、[p]
		「プレイヤーに入力してもらった文字を主人公の名前として表示」したり、[p]
		そういうことができるようになる。[p][akn/def]
		
		
		
;-----------------------------------------------------------
*Part1
;-----------------------------------------------------------
		
		; ●
		; ●変数とは「何かを入れておく箱」のことだ。
		; ●
		
		……変数を使うためには、変数とは何かを知っておく必要があるね。[p]
		変数というのは、「何かを入れておく箱」です。[p]
		たとえば好感度、たとえば主人公の名前……そういうのをしまっておく箱のこと。[p][akn/hap]
		まずここをおさえよう!!　変数＝箱なのだ。[p][akn/def]
		
		
		
;-----------------------------------------------------------
*Part2
;-----------------------------------------------------------
		
		; ●
		; ●変数にモノを入れるには「JavaScript」を使う。「JavaScript」を使うには［eval］または［iscript］を使う。
		; ●
		
		そして変数にモノを入れる操作は「JavaScript」の文によって行うよ。[p]
		JavaScriptというのは、ティラノスクリプトを動かしている大元のプログラムのことだ。[p]
		そのJavaScriptを実行するタグが［eval］［iscript］の二つ。[p]
		さっそく変数に物を入れてみよう。[p]
		
	[iscript]
	f.xxx = 100
	[endscript]
		
		いま「f.xxx = 100」というJavaScript文を実行したよ。[p]
		……これによって「f.xxx」という名前の変数に「100」が入ることになる。[p]
		「■=×」という文は、「■に×を入れてください」という意味になるのだ。[p]
		けっして「■と×は等しい」という意味ではないので、よくよく注意してね。[p][akn/dok]
		
		
		
;-----------------------------------------------------------
*Part3
;-----------------------------------------------------------
		
		; ●
		; ●変数に入っているモノをメッセージとして取り出すには［emb］タグを使う。
		; ●
		
		次に、変数の中身を確認してみよう。[p][akn/def]
		変数の中身をメッセージとして取り出すタグが［emb］タグ。[p]
		使ってみるよ？[p]
		変数「f.xxx」の中身は……「
		
	[emb exp=f.xxx]
		
		」です。[p][akn/hap]
		さっき100を入れたんだから、入ってるのは当然100だね。[p][akn/def]
		
		……。[p]
		これで「変数に物を入れる方法」「それをメッセージとして取り出す方法」がわかりました。[p]
		だがしかし!!　これだけでは変数を使いこなすことはできない!![p]
		変数を使いこなすためには、もっとつっこんだ知識を身につけてほしいな。[p]
		
	[iscript]
	f.shinkou = 0
	[endscript]
		
		
;-----------------------------------------------------------
*Part3_Select
;-----------------------------------------------------------
		
	[glink target="*Hensu_Shurui"  text="「変数の種類」について聞く  " x="230" y=" 50"]
	[glink target="*Nakami_Shurui" text="「中身の種類」について聞く  " x="230" y="150"]
	[glink target="*Enzan"         text="「数値の演算」について聞く  " x="230" y="250"]
	[glink target="*Hikaku"        text="「比較と条件」について聞く  " x="230" y="350"]
	[glink target="*Entity"        text="「エンティティ」について聞く" x="230" y="450"]
	[glink target="*Entity"        text="終わる"                       x="390" y="550"]
	[s]
		
		
		
;-----------------------------------------------------------
*Hensu_Shurui
;-----------------------------------------------------------
		
		さっきの例では「f.xxx」という名前の箱――変数を使いました。[p]
		この「エフ・ドット・エックス・エックス・エックス」ってなんやねん!!　という話ですが、[p]
		後ろの「xxx」は自分の好きなようにつけられる名前で、[p]
		その前の「f.」は「変数の種類」を表しているよ。[p]
		
		変数の種類は全部で3種類。[p]
		「sf.」が「システム変数」、「f.」が「ゲーム変数」、「tf.」が「一時変数」。[p]
		「システム変数」というのは、そのゲーム全体でただ一つしか存在しない変数。[p]
		どのセーブデータでも共通・共有の値となるもので、たとえばコンフィグ設定なんかが該当する。[p]
		「ゲーム変数」はセーブデータ毎に別個に存在する変数で、ふつうはこれを使えばよいです。[p]
		「一時変数」は一時的に使うためだけの変数。[p]
		本当に一時的にしか保存されないので、クリックをまたいで使うのはやめたほうがよいでしょう。[p]
		
		ちなみに変数の名前……さっき「xxx」とした部分は、基本的には好きにつけられるけれど、[p]
		いくつかルールがあります。[p]
		①名前には「半角英数」「全角文字」「_」（アンダーバー）が使える。[p]
		②先頭に数字をもってくるのはダメ。「f.1xxx」など。[p]
		③アンダーバー以外の「半角記号」や「空白」はダメ。「f.x/y」「f.x y」など。[p]
		以上です。[p]
		
		……。[p]
		変数の種類、それから変数の名前について説明したよ。[p]
	
	[jump target="*Part3_Select"]
		
		
		
;-----------------------------------------------------------
*Nakami_Shurui
;-----------------------------------------------------------
		
		変数にはいろいろな中身……モノを入れることができます。[p]
		さっきは「f.xxx」という名前の箱に「100」を入れたよね？[p]
		「100」はいわゆる「数値」という種類のモノなんだ。[p]
		……。[p]
		そりゃそうか。[p]
		モノにはいろんな種類があって……。[p]
		「数値」「文字列」「真偽」「配列」、それから「オブジェクト」などがある。[p]
		基本的には「数値」「文字列」「真偽」の三つをおさえておけばいいのかな、と思うよ。[p]
		
		好感度のように「増えたり減ったりするモノ」は「数値」。[p]
		「主人公の名前」などは「文字列」。[p]
		フラグが立っているか立っていないか、といった「二通りしかないもの」は「真偽」。[p]
		……で管理すると、のちのち開発がわかりやすくなるでしょう。[p]
		
	[jump target="*Part3_Select"]
		
		
		
;-----------------------------------------------------------
*Enzan
;-----------------------------------------------------------
		
		変数を足したり引いたりするには、演算を使おう。[p]
		たとえば「f.xxxの中身の数値を10増やしたい」というときには、こう書く。[p]
		
			f.xxx = f.xxx + 10[p]
		
		……。[p]
		さあ、もー、わけわかんないかもしれないね。[p]
		
		まず、右辺を見よう。[p]
		「f.xxx + 10」という式があるね。[p]
		「f.xxx + 10」という式によって、「f.xxx」の中身に「10」を足した「結果」が得られる。[p]
		
		そして左辺を思い出すと、「f.xxx = 結果」という形になっているでしょ。[p]
		だから演算の結果を、再び「f.xxx」という箱にしまいなおすことになるわけだ。[p]
		それで結局、「f.xxx = f.xxx + 10」という文によって、f.xxxの中身は10増えることになる。[p]
		
		……。[p]
		…………。[p]
		まあ、理屈がわからなくても、使えればいいのだ。[p]
		ちなみに、「f.xxx = f.xxx + 10」という文は、次のように書くことも許されているよ。[p]
		
			f.xxx += 10[p]
		
		これも同じ意味で、「f.xxxに10を足せ」という意味になる。[p]
		……こっちのほうがわかりやすいか。[p]
		でも、あくまで基本はさっきの「f.xxx = f.xxx + 10」です。[p]
		どっちも覚えておくのがベストかな。[p]
		
		「足し算」は「+」という記号によって行うことができますが、他にもいろんな計算ができます。[p]
		「引き算」が「-」。「掛け算」が「*」。「割り算」が「/」。「余り算」が「%」。です。[p]
		また、それぞれ「-=」「*=」「/=」「%=」という書き方ができるよ。[p]
		その意味合いは「+=」のときと同様です。[p]
		
		あと、先に計算してほしいところは、普通の算数と同じように「()」でくくればいいからね。[p]
		
		
	[jump target="*Part3_Select"]
		
		
		
;-----------------------------------------------------------
*Hikaku
;-----------------------------------------------------------
		
		変数の中身について、いろんな条件をチェックしたい場面があるでしょう。[p]
		――彼の好感度は100以上か？[p]
		――料理スキルは50以上か？[p]
		――告白フラグは立っているか？　いないか？[p]
		――入力したパスワードは正しいか？[p]
		そういった条件が成立しているかどうかを調べるには、「比較」を行います。[p]
		比較を行うことで、条件が成立しているかいないか、という「真偽値」を得ることができるの。[p]
		成立していれば真（true）、成立していなければ偽（false）。二つに一つね。[p]
		比較を行う方法は、次のとおり。[p]
		「Ａ>Ｂ」…「ＡはＢより大きい」[p]
		「Ａ<Ｂ」…「ＡはＢより小さい」[p]
		「Ａ>=Ｂ」…「ＡはＢ以上」[p]
		「Ａ<=Ｂ」…「ＡはＢ以下」[p]
		「Ａ==Ｂ」…「ＡはＢに等しい」[p]
		「Ａ!=Ｂ」…「ＡはＢに等しくない」[p]
		複数の条件を「かつ」「または」でつなぐこともできる。[p]
		「①&&②」…「①かつ②（①と②のどちらも真）」[p]
		「①||②」…「①または②（①と②の少なくともどちらかは真）」[p]
		
		
		
	[jump target="*Part3_Select"]
		
		
		
;-----------------------------------------------------------
*Entity
;-----------------------------------------------------------
		
		変数の中身は、メッセージとして取り出すだけが使い道じゃない!![p]
		変数を「タグのパラメータ」として利用することもできるよ。[p]
		パラメータを指定するときに、先頭に「&」をつけて、そのあとに「変数の名前」を書く。[p]
		こうすることで、「変数の中身」がパラメータとして渡されることになる。[p]
		実際にやってみよう。[p]
		いま、変数f.xxxには[emb exp=f.xxx]が入っているね。[p]
		これを［bg］タグのtimeパラメータに使ってみる。[p]
		
	[bg storage="rouka.jpg" time="&f.xxx"]
		
		どうかな。[p]
		パラメータを渡すときに、ついでに変数の演算をすることもできる。[p]
		このテクニックを使えば、f.xxxの数値に1000足した値を指定する、ということができる。[p]
	
	[bg storage="room.jpg" time="&f.xxx + 1000"]
		
		どう？　すごいでしょー。[p]
		種明かしをすると、パラメータの先頭に「&」を付けた場合、ティラノスクリプトは――[p]
		そのあとに続く文字をJavaScriptの式として判断するようにできてるんだ。[p]
		ちょっと凝ったことをやりたい人は覚えておきましょう!![p]
		
	[jump target="*Part3_Select"]
		
		
		
;-----------------------------------------------------------
*End
;-----------------------------------------------------------
	
	; [jump] 目次画面にジャンプします。
	[jump storage="select.ks"]